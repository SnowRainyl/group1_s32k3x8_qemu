Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-strlen.o)
                              FreeRTOS/FreeRTOS/Source/tasks.o (strlen)
/usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-memset.o)
                              startup.o (memset)
/usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-memcpy.o)
                              FreeRTOS/FreeRTOS/Source/queue.o (memcpy)

Discarded input sections

 .text          0x00000000        0x0 main.o
 .data          0x00000000        0x0 main.o
 .bss           0x00000000        0x0 main.o
 .text          0x00000000        0x0 startup.o
 .data          0x00000000        0x0 startup.o
 .bss           0x00000000        0x0 startup.o
 .text          0x00000000        0x0 systemcall.o
 .data          0x00000000        0x0 systemcall.o
 .bss           0x00000000        0x0 systemcall.o
 .text._write   0x00000000        0x4 systemcall.o
 .text._read    0x00000000        0x4 systemcall.o
 .text._close   0x00000000        0x8 systemcall.o
 .text._fstat   0x00000000        0xc systemcall.o
 .text._isatty  0x00000000        0x4 systemcall.o
 .text._lseek   0x00000000        0x4 systemcall.o
 .text._sbrk    0x00000000       0x10 systemcall.o
 .data.heap_end.0
                0x00000000        0x4 systemcall.o
 .comment       0x00000000       0x27 systemcall.o
 .ARM.attributes
                0x00000000       0x34 systemcall.o
 .text          0x00000000        0x0 startup_cm7.o
 .bss           0x00000000        0x0 startup_cm7.o
 .text          0x00000000        0x0 FreeRTOS/FreeRTOS/Source/list.o
 .data          0x00000000        0x0 FreeRTOS/FreeRTOS/Source/list.o
 .bss           0x00000000        0x0 FreeRTOS/FreeRTOS/Source/list.o
 .text.vListInitialise
                0x00000000       0x18 FreeRTOS/FreeRTOS/Source/list.o
 .text.vListInitialiseItem
                0x00000000        0x8 FreeRTOS/FreeRTOS/Source/list.o
 .text.vListInsertEnd
                0x00000000       0x1c FreeRTOS/FreeRTOS/Source/list.o
 .text.vListInsert
                0x00000000       0x30 FreeRTOS/FreeRTOS/Source/list.o
 .text.uxListRemove
                0x00000000       0x28 FreeRTOS/FreeRTOS/Source/list.o
 .comment       0x00000000       0x27 FreeRTOS/FreeRTOS/Source/list.o
 .ARM.attributes
                0x00000000       0x34 FreeRTOS/FreeRTOS/Source/list.o
 .text          0x00000000        0x0 FreeRTOS/FreeRTOS/Source/tasks.o
 .data          0x00000000        0x0 FreeRTOS/FreeRTOS/Source/tasks.o
 .bss           0x00000000        0x0 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.prvSearchForNameWithinSingleList
                0x00000000       0x4c FreeRTOS/FreeRTOS/Source/tasks.o
 .text.prvAddCurrentTaskToDelayedList
                0x00000000       0xb4 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.prvTaskIsTaskSuspended
                0x00000000       0x54 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.prvCheckTasksWaitingTermination
                0x00000000       0x4c FreeRTOS/FreeRTOS/Source/tasks.o
 .text.prvIdleTask
                0x00000000       0x34 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.xTaskIncrementTick.part.0
                0x00000000      0x1bc FreeRTOS/FreeRTOS/Source/tasks.o
 .text.xTaskResumeAll.part.0
                0x00000000      0x188 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.xTaskCreate
                0x00000000      0x20c FreeRTOS/FreeRTOS/Source/tasks.o
 .text.vTaskDelete
                0x00000000      0x114 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.xTaskDelayUntil
                0x00000000       0xd0 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.vTaskDelay
                0x00000000       0x70 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.eTaskGetState
                0x00000000       0xa8 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.uxTaskPriorityGet
                0x00000000       0x28 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.uxTaskPriorityGetFromISR
                0x00000000       0x3c FreeRTOS/FreeRTOS/Source/tasks.o
 .text.uxTaskBasePriorityGet
                0x00000000       0x28 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.uxTaskBasePriorityGetFromISR
                0x00000000       0x3c FreeRTOS/FreeRTOS/Source/tasks.o
 .text.vTaskPrioritySet
                0x00000000       0xfc FreeRTOS/FreeRTOS/Source/tasks.o
 .text.vTaskResume
                0x00000000       0xa8 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.xTaskResumeFromISR
                0x00000000       0xdc FreeRTOS/FreeRTOS/Source/tasks.o
 .text.vTaskStartScheduler
                0x00000000       0x98 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.vTaskEndScheduler
                0x00000000       0x40 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.vTaskSuspendAll
                0x00000000       0x10 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.xTaskResumeAll
                0x00000000       0x30 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.xTaskGetTickCount
                0x00000000        0xc FreeRTOS/FreeRTOS/Source/tasks.o
 .text.xTaskGetTickCountFromISR
                0x00000000       0x10 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.uxTaskGetNumberOfTasks
                0x00000000        0xc FreeRTOS/FreeRTOS/Source/tasks.o
 .text.pcTaskGetName
                0x00000000       0x28 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.xTaskGetHandle
                0x00000000       0xc0 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.xTaskGetIdleTaskHandle
                0x00000000       0x24 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.xTaskGetIdleTaskHandleForCore
                0x00000000       0x3c FreeRTOS/FreeRTOS/Source/tasks.o
 .text.xTaskCatchUpTicks
                0x00000000       0x64 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.xTaskAbortDelay
                0x00000000       0xdc FreeRTOS/FreeRTOS/Source/tasks.o
 .text.xTaskIncrementTick
                0x00000000       0x20 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.vTaskSwitchContext
                0x00000000       0xac FreeRTOS/FreeRTOS/Source/tasks.o
 .text.vTaskSuspend
                0x00000000      0x128 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.vTaskPlaceOnEventList
                0x00000000       0x38 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.vTaskPlaceOnUnorderedEventList
                0x00000000       0x80 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.vTaskPlaceOnEventListRestricted
                0x00000000       0x68 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.xTaskRemoveFromEventList
                0x00000000       0xe8 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.vTaskRemoveFromUnorderedEventList
                0x00000000       0xe4 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.vTaskSetTimeOutState
                0x00000000       0x3c FreeRTOS/FreeRTOS/Source/tasks.o
 .text.vTaskInternalSetTimeOutState
                0x00000000       0x18 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.xTaskCheckForTimeOut
                0x00000000       0xa4 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.vTaskMissedYield
                0x00000000        0xc FreeRTOS/FreeRTOS/Source/tasks.o
 .text.uxTaskGetStackHighWaterMark
                0x00000000       0x34 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.xTaskGetCurrentTaskHandle
                0x00000000        0xc FreeRTOS/FreeRTOS/Source/tasks.o
 .text.xTaskGetCurrentTaskHandleForCore
                0x00000000       0x10 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.xTaskGetSchedulerState
                0x00000000       0x20 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.xTaskPriorityInherit
                0x00000000       0xa8 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.xTaskPriorityDisinherit
                0x00000000       0xb8 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.vTaskPriorityDisinheritAfterTimeout
                0x00000000       0xc0 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.uxTaskResetEventItemValue
                0x00000000       0x18 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.pvTaskIncrementMutexHeldCount
                0x00000000       0x14 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.ulTaskGenericNotifyTake
                0x00000000       0xec FreeRTOS/FreeRTOS/Source/tasks.o
 .text.xTaskGenericNotifyWait
                0x00000000      0x120 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.xTaskGenericNotify
                0x00000000      0x164 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.xTaskGenericNotifyFromISR
                0x00000000      0x1ac FreeRTOS/FreeRTOS/Source/tasks.o
 .text.vTaskGenericNotifyGiveFromISR
                0x00000000      0x148 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.xTaskGenericNotifyStateClear
                0x00000000       0x64 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.ulTaskGenericNotifyValueClear
                0x00000000       0x48 FreeRTOS/FreeRTOS/Source/tasks.o
 .text.vTaskResetState
                0x00000000       0x6c FreeRTOS/FreeRTOS/Source/tasks.o
 .bss.uxSchedulerSuspended
                0x00000000        0x4 FreeRTOS/FreeRTOS/Source/tasks.o
 .rodata.uxTopUsedPriority
                0x00000000        0x4 FreeRTOS/FreeRTOS/Source/tasks.o
 .bss.xIdleTaskHandles
                0x00000000        0x4 FreeRTOS/FreeRTOS/Source/tasks.o
 .bss.xNextTaskUnblockTime
                0x00000000        0x4 FreeRTOS/FreeRTOS/Source/tasks.o
 .bss.uxTaskNumber
                0x00000000        0x4 FreeRTOS/FreeRTOS/Source/tasks.o
 .bss.xNumOfOverflows
                0x00000000        0x4 FreeRTOS/FreeRTOS/Source/tasks.o
 .bss.xYieldPendings
                0x00000000        0x4 FreeRTOS/FreeRTOS/Source/tasks.o
 .bss.xPendedTicks
                0x00000000        0x4 FreeRTOS/FreeRTOS/Source/tasks.o
 .bss.xSchedulerRunning
                0x00000000        0x4 FreeRTOS/FreeRTOS/Source/tasks.o
 .bss.uxTopReadyPriority
                0x00000000        0x4 FreeRTOS/FreeRTOS/Source/tasks.o
 .bss.xTickCount
                0x00000000        0x4 FreeRTOS/FreeRTOS/Source/tasks.o
 .bss.uxCurrentNumberOfTasks
                0x00000000        0x4 FreeRTOS/FreeRTOS/Source/tasks.o
 .bss.xSuspendedTaskList
                0x00000000       0x14 FreeRTOS/FreeRTOS/Source/tasks.o
 .bss.uxDeletedTasksWaitingCleanUp
                0x00000000        0x4 FreeRTOS/FreeRTOS/Source/tasks.o
 .bss.xTasksWaitingTermination
                0x00000000       0x14 FreeRTOS/FreeRTOS/Source/tasks.o
 .bss.xPendingReadyList
                0x00000000       0x14 FreeRTOS/FreeRTOS/Source/tasks.o
 .bss.pxOverflowDelayedTaskList
                0x00000000        0x4 FreeRTOS/FreeRTOS/Source/tasks.o
 .bss.pxDelayedTaskList
                0x00000000        0x4 FreeRTOS/FreeRTOS/Source/tasks.o
 .bss.xDelayedTaskList2
                0x00000000       0x14 FreeRTOS/FreeRTOS/Source/tasks.o
 .bss.xDelayedTaskList1
                0x00000000       0x14 FreeRTOS/FreeRTOS/Source/tasks.o
 .bss.pxReadyTasksLists
                0x00000000       0xb4 FreeRTOS/FreeRTOS/Source/tasks.o
 .bss.pxCurrentTCB
                0x00000000        0x4 FreeRTOS/FreeRTOS/Source/tasks.o
 .comment       0x00000000       0x27 FreeRTOS/FreeRTOS/Source/tasks.o
 .ARM.attributes
                0x00000000       0x34 FreeRTOS/FreeRTOS/Source/tasks.o
 .text          0x00000000        0x0 FreeRTOS/FreeRTOS/Source/queue.o
 .data          0x00000000        0x0 FreeRTOS/FreeRTOS/Source/queue.o
 .bss           0x00000000        0x0 FreeRTOS/FreeRTOS/Source/queue.o
 .text.prvCopyDataToQueue
                0x00000000       0x74 FreeRTOS/FreeRTOS/Source/queue.o
 .text.prvNotifyQueueSetContainer
                0x00000000       0xa4 FreeRTOS/FreeRTOS/Source/queue.o
 .text.prvUnlockQueue
                0x00000000       0x9c FreeRTOS/FreeRTOS/Source/queue.o
 .text.xQueueGenericReset
                0x00000000       0xa8 FreeRTOS/FreeRTOS/Source/queue.o
 .text.xQueueGenericCreate
                0x00000000       0x58 FreeRTOS/FreeRTOS/Source/queue.o
 .text.xQueueGetMutexHolder
                0x00000000       0x38 FreeRTOS/FreeRTOS/Source/queue.o
 .text.xQueueGetMutexHolderFromISR
                0x00000000       0x24 FreeRTOS/FreeRTOS/Source/queue.o
 .text.xQueueCreateCountingSemaphore
                0x00000000       0x30 FreeRTOS/FreeRTOS/Source/queue.o
 .text.xQueueGenericSend
                0x00000000      0x1b8 FreeRTOS/FreeRTOS/Source/queue.o
 .text.xQueueCreateMutex
                0x00000000       0x34 FreeRTOS/FreeRTOS/Source/queue.o
 .text.xQueueGiveMutexRecursive
                0x00000000       0x44 FreeRTOS/FreeRTOS/Source/queue.o
 .text.xQueueGenericSendFromISR
                0x00000000      0x128 FreeRTOS/FreeRTOS/Source/queue.o
 .text.xQueueGiveFromISR
                0x00000000       0xec FreeRTOS/FreeRTOS/Source/queue.o
 .text.xQueueReceive
                0x00000000      0x180 FreeRTOS/FreeRTOS/Source/queue.o
 .text.xQueueSemaphoreTake
                0x00000000      0x1a8 FreeRTOS/FreeRTOS/Source/queue.o
 .text.xQueueTakeMutexRecursive
                0x00000000       0x44 FreeRTOS/FreeRTOS/Source/queue.o
 .text.xQueuePeek
                0x00000000      0x17c FreeRTOS/FreeRTOS/Source/queue.o
 .text.xQueueReceiveFromISR
                0x00000000       0xe8 FreeRTOS/FreeRTOS/Source/queue.o
 .text.xQueuePeekFromISR
                0x00000000       0x9c FreeRTOS/FreeRTOS/Source/queue.o
 .text.uxQueueMessagesWaiting
                0x00000000       0x2c FreeRTOS/FreeRTOS/Source/queue.o
 .text.uxQueueSpacesAvailable
                0x00000000       0x30 FreeRTOS/FreeRTOS/Source/queue.o
 .text.uxQueueMessagesWaitingFromISR
                0x00000000       0x1c FreeRTOS/FreeRTOS/Source/queue.o
 .text.uxQueueGetQueueItemSize
                0x00000000        0x4 FreeRTOS/FreeRTOS/Source/queue.o
 .text.uxQueueGetQueueLength
                0x00000000        0x4 FreeRTOS/FreeRTOS/Source/queue.o
 .text.xQueueIsQueueEmptyFromISR
                0x00000000       0x24 FreeRTOS/FreeRTOS/Source/queue.o
 .text.xQueueIsQueueFullFromISR
                0x00000000       0x28 FreeRTOS/FreeRTOS/Source/queue.o
 .text.vQueueAddToRegistry
                0x00000000       0x64 FreeRTOS/FreeRTOS/Source/queue.o
 .text.pcQueueGetName
                0x00000000       0x40 FreeRTOS/FreeRTOS/Source/queue.o
 .text.vQueueUnregisterQueue
                0x00000000       0x50 FreeRTOS/FreeRTOS/Source/queue.o
 .text.vQueueDelete
                0x00000000       0x2c FreeRTOS/FreeRTOS/Source/queue.o
 .text.vQueueWaitForMessageRestricted
                0x00000000       0x50 FreeRTOS/FreeRTOS/Source/queue.o
 .text.xQueueCreateSet
                0x00000000       0x50 FreeRTOS/FreeRTOS/Source/queue.o
 .text.xQueueAddToSet
                0x00000000       0x2c FreeRTOS/FreeRTOS/Source/queue.o
 .text.xQueueRemoveFromSet
                0x00000000       0x2c FreeRTOS/FreeRTOS/Source/queue.o
 .text.xQueueSelectFromSet
                0x00000000       0x18 FreeRTOS/FreeRTOS/Source/queue.o
 .text.xQueueSelectFromSetFromISR
                0x00000000       0x18 FreeRTOS/FreeRTOS/Source/queue.o
 .bss.xQueueRegistry
                0x00000000       0x50 FreeRTOS/FreeRTOS/Source/queue.o
 .comment       0x00000000       0x27 FreeRTOS/FreeRTOS/Source/queue.o
 .ARM.attributes
                0x00000000       0x34 FreeRTOS/FreeRTOS/Source/queue.o
 .text          0x00000000        0x0 FreeRTOS/FreeRTOS/Source/timers.o
 .data          0x00000000        0x0 FreeRTOS/FreeRTOS/Source/timers.o
 .bss           0x00000000        0x0 FreeRTOS/FreeRTOS/Source/timers.o
 .rodata.prvCheckForValidListAndQueue.str1.4
                0x00000000        0x5 FreeRTOS/FreeRTOS/Source/timers.o
 .text.prvCheckForValidListAndQueue
                0x00000000       0x5c FreeRTOS/FreeRTOS/Source/timers.o
 .text.prvProcessExpiredTimer
                0x00000000       0x90 FreeRTOS/FreeRTOS/Source/timers.o
 .text.prvTimerTask
                0x00000000      0x28c FreeRTOS/FreeRTOS/Source/timers.o
 .rodata.xTimerCreateTimerTask.str1.4
                0x00000000        0x8 FreeRTOS/FreeRTOS/Source/timers.o
 .text.xTimerCreateTimerTask
                0x00000000       0x50 FreeRTOS/FreeRTOS/Source/timers.o
 .text.xTimerCreate
                0x00000000       0x60 FreeRTOS/FreeRTOS/Source/timers.o
 .text.xTimerGenericCommandFromTask
                0x00000000       0x74 FreeRTOS/FreeRTOS/Source/timers.o
 .text.xTimerGenericCommandFromISR
                0x00000000       0x60 FreeRTOS/FreeRTOS/Source/timers.o
 .text.xTimerGetTimerDaemonTaskHandle
                0x00000000       0x24 FreeRTOS/FreeRTOS/Source/timers.o
 .text.xTimerGetPeriod
                0x00000000       0x1c FreeRTOS/FreeRTOS/Source/timers.o
 .text.vTimerSetReloadMode
                0x00000000       0x48 FreeRTOS/FreeRTOS/Source/timers.o
 .text.xTimerGetReloadMode
                0x00000000       0x30 FreeRTOS/FreeRTOS/Source/timers.o
 .text.uxTimerGetReloadMode
                0x00000000       0x30 FreeRTOS/FreeRTOS/Source/timers.o
 .text.xTimerGetExpiryTime
                0x00000000       0x1c FreeRTOS/FreeRTOS/Source/timers.o
 .text.pcTimerGetName
                0x00000000       0x1c FreeRTOS/FreeRTOS/Source/timers.o
 .text.xTimerIsTimerActive
                0x00000000       0x30 FreeRTOS/FreeRTOS/Source/timers.o
 .text.pvTimerGetTimerID
                0x00000000       0x2c FreeRTOS/FreeRTOS/Source/timers.o
 .text.vTimerSetTimerID
                0x00000000       0x2c FreeRTOS/FreeRTOS/Source/timers.o
 .text.xTimerPendFunctionCallFromISR
                0x00000000       0x28 FreeRTOS/FreeRTOS/Source/timers.o
 .text.xTimerPendFunctionCall
                0x00000000       0x44 FreeRTOS/FreeRTOS/Source/timers.o
 .text.vTimerResetState
                0x00000000       0x14 FreeRTOS/FreeRTOS/Source/timers.o
 .bss.xLastTime.0
                0x00000000        0x4 FreeRTOS/FreeRTOS/Source/timers.o
 .bss.xTimerTaskHandle
                0x00000000        0x4 FreeRTOS/FreeRTOS/Source/timers.o
 .bss.xTimerQueue
                0x00000000        0x4 FreeRTOS/FreeRTOS/Source/timers.o
 .bss.pxOverflowTimerList
                0x00000000        0x4 FreeRTOS/FreeRTOS/Source/timers.o
 .bss.pxCurrentTimerList
                0x00000000        0x4 FreeRTOS/FreeRTOS/Source/timers.o
 .bss.xActiveTimerList2
                0x00000000       0x14 FreeRTOS/FreeRTOS/Source/timers.o
 .bss.xActiveTimerList1
                0x00000000       0x14 FreeRTOS/FreeRTOS/Source/timers.o
 .comment       0x00000000       0x27 FreeRTOS/FreeRTOS/Source/timers.o
 .ARM.attributes
                0x00000000       0x34 FreeRTOS/FreeRTOS/Source/timers.o
 .text          0x00000000        0x0 FreeRTOS/FreeRTOS/Source/portable/MemMang/heap_4.o
 .data          0x00000000        0x0 FreeRTOS/FreeRTOS/Source/portable/MemMang/heap_4.o
 .bss           0x00000000        0x0 FreeRTOS/FreeRTOS/Source/portable/MemMang/heap_4.o
 .text.pvPortMalloc
                0x00000000      0x1d8 FreeRTOS/FreeRTOS/Source/portable/MemMang/heap_4.o
 .text.vPortFree
                0x00000000      0x124 FreeRTOS/FreeRTOS/Source/portable/MemMang/heap_4.o
 .text.xPortGetFreeHeapSize
                0x00000000        0xc FreeRTOS/FreeRTOS/Source/portable/MemMang/heap_4.o
 .text.xPortGetMinimumEverFreeHeapSize
                0x00000000        0xc FreeRTOS/FreeRTOS/Source/portable/MemMang/heap_4.o
 .text.vPortInitialiseBlocks
                0x00000000        0x4 FreeRTOS/FreeRTOS/Source/portable/MemMang/heap_4.o
 .text.pvPortCalloc
                0x00000000       0x28 FreeRTOS/FreeRTOS/Source/portable/MemMang/heap_4.o
 .text.vPortGetHeapStats
                0x00000000       0x84 FreeRTOS/FreeRTOS/Source/portable/MemMang/heap_4.o
 .text.vPortHeapResetState
                0x00000000       0x34 FreeRTOS/FreeRTOS/Source/portable/MemMang/heap_4.o
 .bss.xNumberOfSuccessfulFrees
                0x00000000        0x4 FreeRTOS/FreeRTOS/Source/portable/MemMang/heap_4.o
 .bss.xNumberOfSuccessfulAllocations
                0x00000000        0x4 FreeRTOS/FreeRTOS/Source/portable/MemMang/heap_4.o
 .bss.xMinimumEverFreeBytesRemaining
                0x00000000        0x4 FreeRTOS/FreeRTOS/Source/portable/MemMang/heap_4.o
 .bss.xFreeBytesRemaining
                0x00000000        0x4 FreeRTOS/FreeRTOS/Source/portable/MemMang/heap_4.o
 .bss.pxEnd     0x00000000        0x4 FreeRTOS/FreeRTOS/Source/portable/MemMang/heap_4.o
 .bss.xStart    0x00000000        0x8 FreeRTOS/FreeRTOS/Source/portable/MemMang/heap_4.o
 .bss.ucHeap    0x00000000    0x20000 FreeRTOS/FreeRTOS/Source/portable/MemMang/heap_4.o
 .comment       0x00000000       0x27 FreeRTOS/FreeRTOS/Source/portable/MemMang/heap_4.o
 .ARM.attributes
                0x00000000       0x34 FreeRTOS/FreeRTOS/Source/portable/MemMang/heap_4.o
 .text          0x00000000        0x0 FreeRTOS/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/port.o
 .data          0x00000000        0x0 FreeRTOS/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/port.o
 .bss           0x00000000        0x0 FreeRTOS/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/port.o
 .text.vPortSVCHandler
                0x00000000       0x24 FreeRTOS/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/port.o
 .text.prvPortStartFirstTask
                0x00000000       0x28 FreeRTOS/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/port.o
 .text.xPortPendSVHandler
                0x00000000       0x64 FreeRTOS/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/port.o
 .text.vPortEnableVFP
                0x00000000       0x14 FreeRTOS/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/port.o
 .text.prvTaskExitError
                0x00000000       0x48 FreeRTOS/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/port.o
 .text.pxPortInitialiseStack
                0x00000000       0x30 FreeRTOS/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/port.o
 .text.vPortEndScheduler
                0x00000000       0x28 FreeRTOS/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/port.o
 .text.vPortEnterCritical
                0x00000000       0x4c FreeRTOS/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/port.o
 .text.vPortExitCritical
                0x00000000       0x2c FreeRTOS/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/port.o
 .text.xPortSysTickHandler
                0x00000000       0x30 FreeRTOS/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/port.o
 .text.vPortSetupTimerInterrupt
                0x00000000       0x18 FreeRTOS/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/port.o
 .text.xPortStartScheduler
                0x00000000      0x14c FreeRTOS/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/port.o
 .text.vPortValidateInterruptPriority
                0x00000000       0x64 FreeRTOS/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/port.o
 .bss.ulMaxPRIGROUPValue
                0x00000000        0x4 FreeRTOS/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/port.o
 .bss.ucMaxSysCallPriority
                0x00000000        0x1 FreeRTOS/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/port.o
 .data.uxCriticalNesting
                0x00000000        0x4 FreeRTOS/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/port.o
 .comment       0x00000000       0x27 FreeRTOS/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/port.o
 .ARM.attributes
                0x00000000       0x34 FreeRTOS/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/port.o
 .text          0x00000000       0xd8 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-strlen.o)
 .data          0x00000000        0x0 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-strlen.o)
 .bss           0x00000000        0x0 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-strlen.o)
 .ARM.extab     0x00000000        0x0 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-strlen.o)
 .ARM.exidx     0x00000000        0x8 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-strlen.o)
 .debug_line    0x00000000       0x86 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-strlen.o)
 .debug_line_str
                0x00000000       0x98 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-strlen.o)
 .debug_info    0x00000000       0x33 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-strlen.o)
 .debug_abbrev  0x00000000       0x28 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-strlen.o)
 .debug_aranges
                0x00000000       0x20 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-strlen.o)
 .debug_str     0x00000000       0xab /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-strlen.o)
 .eh_frame      0x00000000       0x34 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-strlen.o)
 .ARM.attributes
                0x00000000       0x1c /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-strlen.o)
 .data          0x00000000        0x0 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-memset.o)
 .bss           0x00000000        0x0 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-memset.o)
 .text          0x00000000      0x134 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-memcpy.o)
 .data          0x00000000        0x0 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-memcpy.o)
 .bss           0x00000000        0x0 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-memcpy.o)
 .ARM.extab     0x00000000        0x0 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-memcpy.o)
 .ARM.exidx     0x00000000        0x8 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-memcpy.o)
 .debug_line    0x00000000       0xb9 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-memcpy.o)
 .debug_line_str
                0x00000000       0x99 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-memcpy.o)
 .debug_info    0x00000000       0x33 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-memcpy.o)
 .debug_abbrev  0x00000000       0x28 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-memcpy.o)
 .debug_aranges
                0x00000000       0x20 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-memcpy.o)
 .debug_str     0x00000000       0xac /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-memcpy.o)
 .eh_frame      0x00000000       0x2c /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-memcpy.o)
 .ARM.attributes
                0x00000000       0x20 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-memcpy.o)

Memory Configuration

Name             Origin             Length             Attributes
int_pflash       0x00000000         0x007d4000
int_dflash       0x10000000         0x00020000
int_itcm         0x00000000         0x00010000
int_dtcm         0x20000000         0x0001f000
int_stack_dtcm   0x2001f000         0x00001000
int_sram         0x20400000         0x0007ff00
int_sram_fls_rsv 0x2047ff00         0x00000100
int_sram_no_cacheable 0x20480000         0x0003bf00
int_sram_results 0x204bbf00         0x00000100
int_sram_shareable 0x204bc000         0x00004000
ram_rsvd2        0x204c0000         0x00000000
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD main.o
LOAD startup.o
LOAD systemcall.o
LOAD startup_cm7.o
LOAD FreeRTOS/FreeRTOS/Source/list.o
LOAD FreeRTOS/FreeRTOS/Source/tasks.o
LOAD FreeRTOS/FreeRTOS/Source/queue.o
LOAD FreeRTOS/FreeRTOS/Source/timers.o
LOAD FreeRTOS/FreeRTOS/Source/portable/MemMang/heap_4.o
LOAD FreeRTOS/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/port.o
START GROUP
LOAD /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a
LOAD /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libm.a
END GROUP
START GROUP
LOAD /usr/lib/gcc/arm-none-eabi/13.2.1/thumb/v7e-m+fp/hard/libgcc.a
LOAD /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a
END GROUP
START GROUP
LOAD /usr/lib/gcc/arm-none-eabi/13.2.1/thumb/v7e-m+fp/hard/libgcc.a
LOAD /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a
LOAD /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libnosys.a
END GROUP
START GROUP
LOAD /usr/lib/gcc/arm-none-eabi/13.2.1/thumb/v7e-m+fp/hard/libgcc.a
LOAD /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a
LOAD /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libnosys.a
END GROUP
                0x00002000                        HEAP_SIZE = DEFINED (__heap_size__)?__heap_size__:0x2000
                0x2040ffff                        __STANDBY_RAM_LIMIT_END = 0x2040ffff

.pflash         0x00000000      0xc7c
 *(.boot_header)
 .boot_header   0x00000000       0x30 startup_cm7.o
                0x00000800                        . = ALIGN (0x800)
 *fill*         0x00000030      0x7d0 
                0x00000800                        __text_start = .
                0x00000800                        __interrupts_init_start = .
 *(.intc_vector)
                0x00000800                        . = ALIGN (0x4)
                0x00000800                        __interrupts_init_end = .
 *(.core_loop)
 .core_loop     0x00000800        0xc startup_cm7.o
                0x00000800                _core_loop
                0x0000080c                        . = ALIGN (0x4)
 *(.startup)
 *fill*         0x0000080c        0x4 
 .startup       0x00000810      0x1dc startup_cm7.o
                0x00000810                Reset_Handler
                0x00000810                _start
                0x0000097c                MCAL_LTB_TRACE_OFF
                0x0000097e                _end_of_eunit_test
                0x000009ec                        . = ALIGN (0x4)
 *(.systeminit)
                0x000009ec                        . = ALIGN (0x4)
 *(.text.startup)
                0x000009ec                        . = ALIGN (0x4)
 *(.text)
 .text          0x000009ec       0xa4 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-memset.o)
                0x000009ec                memset
 *(.text*)
 .text.startup.main
                0x00000a90       0x4c main.o
                0x00000a90                main
 .text.SystemInit
                0x00000adc        0x4 startup.o
                0x00000adc                SystemInit
 .text.startup_go_to_user_mode
                0x00000ae0        0x4 startup.o
                0x00000ae0                startup_go_to_user_mode
 .text.init_data_bss
                0x00000ae4       0xa0 startup.o
                0x00000ae4                init_data_bss
 .text.init_data_bss_core2
                0x00000b84       0x74 startup.o
                0x00000b84                init_data_bss_core2
                0x00000bf8                        . = ALIGN (0x4)
 *(.mcal_text)
                0x00000bf8                        . = ALIGN (0x4)
 *(.acmcu_code_rom)
                0x00000bf8                        . = ALIGN (0x4)
                0x00000bf8                        __acfls_code_rom_start = .
 *(.acfls_code_rom)
                0x00000bf8                        . = ALIGN (0x4)
                0x00000bf8                        __acfls_code_rom_end = .
 *(.init)
                0x00000bf8                        . = ALIGN (0x4)
 *(.fini)
                0x00000bf8                        . = ALIGN (0x4)
 *(.rodata)
 *(.rodata*)
 .rodata.main.str1.4
                0x00000bf8       0x19 main.o
                0x00000c14                        . = ALIGN (0x4)
 *fill*         0x00000c11        0x3 
 *(.mcal_const_cfg)
                0x00000c14                        . = ALIGN (0x4)
 *(.mcal_const)
                0x00000c14                        . = ALIGN (0x4)
                0x00000c14                        __init_table = .
 *(.init_table)
 .init_table    0x00000c14       0x4c startup_cm7.o
                0x00000c60                        . = ALIGN (0x4)
                0x00000c60                        __zero_table = .
 *(.zero_table)
 .zero_table    0x00000c60       0x1c startup_cm7.o

.glue_7         0x00000c7c        0x0
 .glue_7        0x00000c7c        0x0 linker stubs

.glue_7t        0x00000c7c        0x0
 .glue_7t       0x00000c7c        0x0 linker stubs

.vfp11_veneer   0x00000c7c        0x0
 .vfp11_veneer  0x00000c7c        0x0 linker stubs

.v4_bx          0x00000c7c        0x0
 .v4_bx         0x00000c7c        0x0 linker stubs

.iplt           0x00000c7c        0x0
 .iplt          0x00000c7c        0x0 main.o

.rel.dyn        0x00000c7c        0x0
 .rel.iplt      0x00000c7c        0x0 main.o
                0x00000c7c                        . = ALIGN (0x4)
                0x00000c7c                        __text_end = .
                0x00000c7c                        __sram_data_rom = __text_end

.sram_bss       0x20400000        0x0
                0x20400000                        . = ALIGN (0x8)
                0x20400000                        __standby_ram_begin__ = .
 *(.standby_data)
                0x20400000                        . = ALIGN (0x8)
                0x20400000                        __standby_ram_end__ = .
                0x20400000                        . = ALIGN (0x10)
                0x20400000                        __sram_bss_start = .
 *(.bss)
 *(.bss*)
                0x20400000                        . = ALIGN (0x10)
 *(.mcal_bss)
                0x20400000                        . = ALIGN (0x4)
                0x20400000                        __sram_bss_end = .

.sram_data      0x20400000        0x4 load address 0x00000c7c
                0x20400000                        . = ALIGN (0x4)
                0x20400000                        __sram_data_begin__ = .
                0x20400000                        . = ALIGN (0x4)
 *(.ramcode)
                0x20400000                        . = ALIGN (0x4)
 *(.data)
 .data          0x20400000        0x4 startup_cm7.o
                0x20400000                RESET_CATCH_CORE
 *(.data*)
                0x20400004                        . = ALIGN (0x4)
 *(.mcal_data)
                0x20400004                        . = ALIGN (0x4)
                0x20400004                        __sram_data_end__ = .
                0x00000c80                        __sram_data_rom_end = (__sram_data_rom + (__sram_data_end__ - __sram_data_begin__))

.heap           0x20400004     0x2000 load address 0x00000c80
                0x00000000                        . = (. + ALIGN (0x4))
                0x20400004                        _end = .
                0x20400004                        end = .
                0x20400004                        _heap_start = .
                0x00002000                        . = (. + HEAP_SIZE)
 *fill*         0x20400004     0x2000 
                0x20402004                        _heap_end = .

.acfls_code_ram
                0x2047ff00        0x0
                0x2047ff00                        acfls_code_ram_start = .
 *(.acfls_code_ram)
                0x2047ff00                        acfls_code_ram_stop = .
                0x00000c80                        __non_cacheable_data_rom = __sram_data_rom_end

.non_cacheable_data
                0x20480000        0x4 load address 0x00000c80
                0x20480000                        . = ALIGN (0x4)
                0x20480000                        __non_cacheable_data_start__ = .
 *(.mcal_data_no_cacheable)
                0x20480000                        . = ALIGN (0x4)
 *(.mcal_const_no_cacheable)
                0x20480000                        . = ALIGN (0x4)
                0x20480000                        HSE_LOOP_ADDR = .
                0x20480000        0x4 LONG 0x0
                0x20480004                        __non_cacheable_data_end__ = .
                0x00000c84                        __non_cacheable_data_rom_end = (__non_cacheable_data_rom + (__non_cacheable_data_end__ - __non_cacheable_data_start__))

.igot.plt       0x20480004        0x0 load address 0x00000c84
 .igot.plt      0x20480004        0x0 main.o

.non_cacheable_bss
                0x20480004        0xc load address 0x00000c84
                0x20480010                        . = ALIGN (0x10)
 *fill*         0x20480004        0xc 
                0x20480010                        __non_cacheable_bss_start = .
 *(.mcal_bss_no_cacheable)
                0x20480010                        . = ALIGN (0x4)
                0x20480010                        __non_cacheable_bss_end = .

.int_results    0x204bbf00      0x100
                0x204bbf00                        . = ALIGN (0x4)
 *(.int_results)
                0x204bc000                        . = (. + 0x100)
 *fill*         0x204bbf00      0x100 
                0x00000c84                        __shareable_data_rom = __non_cacheable_data_rom_end

.shareable_data
                0x204bc000        0x0 load address 0x00000c84
                0x204bc000                        . = ALIGN (0x4)
                0x204bc000                        __shareable_data_start__ = .
 *(.mcal_shared_data)
                0x204bc000                        . = ALIGN (0x4)
                0x204bc000                        __shareable_data_end__ = .
                0x00000c84                        __shareable_data_rom_end = (__shareable_data_rom + (__shareable_data_end__ - __shareable_data_start__))

.int_vector     0x20000000        0x0
                0x20000000                        . = ALIGN (0x800)
                0x20000000                        __interrupts_ram_start = .
                0x20000000                        . = (. + (__interrupts_init_end - __interrupts_init_start))
                0x20000000                        . = ALIGN (0x4)
                0x20000000                        __interrupts_ram_end = .
                0x00000c84                        __tcm_data_rom = __shareable_data_rom_end

.data_tcm_data  0x20000000        0x0 load address 0x00000c84
                0x20000000                        . = ALIGN (0x4)
                0x20000000                        __dtcm_data_start__ = .
 *(.dtcm_data*)
                0x20000000                        . = ALIGN (0x4)
                0x20000000                        __dtcm_data_end__ = .
                0x00000c84                        __tcm_data_rom_end = (__tcm_data_rom + (__dtcm_data_end__ - __dtcm_data_start__))

.bss_tcm_data   0x20000000        0x0
                0x20000000                        . = ALIGN (0x4)
                0x20000000                        __dtcm_bss_start__ = .
 *(.dtcm_bss*)
                0x20000000                        . = ALIGN (0x4)
                0x20000000                        __dtcm_bss_end__ = .
                0x00000c84                        __tcm_code_rom_start = __tcm_data_rom_end

.itcm_text      0x00000000        0x0 load address 0x00000c84
                0x00000000                        . = ALIGN (0x4)
                0x00000000                        __itcm_start__ = .
 *(.itcm_text*)
                0x00000000                        . = ALIGN (0x4)
                0x00000000                        __itcm_end__ = .
                0x00000c84                        __tcm_code_rom_end = (__tcm_code_rom_start + (__itcm_end__ - __itcm_start__))

.shareable_bss  0x204bc000        0x0
                0x204bc000                        . = ALIGN (0x10)
                0x204bc000                        __shareable_bss_start = .
 *(.mcal_shared_bss)
                0x204bc000                        . = ALIGN (0x4)
                0x204bc000                        __shareable_bss_end = .
                0x2001f000                        __Stack_dtcm_end = ORIGIN (int_stack_dtcm)
                0x20020000                        __Stack_dtcm_start = (ORIGIN (int_stack_dtcm) + LENGTH (int_stack_dtcm))
                0x20400000                        __INT_SRAM_START = ORIGIN (int_sram)
                0x204c0000                        __INT_SRAM_END = ORIGIN (ram_rsvd2)
                0x00000000                        __INT_ITCM_START = ORIGIN (int_itcm)
                0x00010000                        __INT_ITCM_END = (ORIGIN (int_itcm) + LENGTH (int_itcm))
                0x20000000                        __INT_DTCM_START = ORIGIN (int_dtcm)
                0x20020000                        __INT_DTCM_END = ((ORIGIN (int_dtcm) + LENGTH (int_dtcm)) + LENGTH (int_stack_dtcm))
                0x204bc000                        __RAM_SHAREABLE_START = ORIGIN (int_sram_shareable)
                0x204c0000                        __RAM_SHAREABLE_END = (ORIGIN (int_sram_shareable) + LENGTH (int_sram_shareable))
                0x0000000e                        __RAM_SHAREABLE_SIZE = 0xe
                0x00000c84                        __ROM_SHAREABLE_START = __shareable_data_rom
                0x00000c84                        __ROM_SHAREABLE_END = __shareable_data_rom_end
                0x20480000                        __RAM_NO_CACHEABLE_START = ORIGIN (int_sram_no_cacheable)
                0x204bbfff                        __RAM_NO_CACHEABLE_END = (ORIGIN (int_sram_shareable) - 0x1)
                0x00000012                        __RAM_NO_CACHEABLE_SIZE = 0x12
                0x00000c80                        __ROM_NO_CACHEABLE_START = __non_cacheable_data_rom
                0x00000c84                        __ROM_NO_CACHEABLE_END = __non_cacheable_data_rom_end
                0x20400000                        __RAM_CACHEABLE_START = __sram_data_begin__
                0x2047ffff                        __RAM_CACHEABLE_END = (ORIGIN (int_sram_no_cacheable) - 0x1)
                0x00000013                        __RAM_CACHEABLE_SIZE = 0x13
                0x00000c7c                        __ROM_CACHEABLE_START = __sram_data_rom
                0x00000c80                        __ROM_CACHEABLE_END = __sram_data_rom_end
                0x00000000                        __ROM_CODE_START = ORIGIN (int_pflash)
                0x10000000                        __ROM_DATA_START = ORIGIN (int_dflash)
                0x20400000                        __BSS_SRAM_START = __sram_bss_start
                0x20400000                        __BSS_SRAM_END = __sram_bss_end
                0x00000000                        __BSS_SRAM_SIZE = (__sram_bss_end - __sram_bss_start)
                0x20480010                        __BSS_SRAM_NC_START = __non_cacheable_bss_start
                0x00000000                        __BSS_SRAM_NC_SIZE = (__non_cacheable_bss_end - __non_cacheable_bss_start)
                0x20480010                        __BSS_SRAM_NC_END = __non_cacheable_bss_end
                0x204bc000                        __BSS_SRAM_SH_START = __shareable_bss_start
                0x00000000                        __BSS_SRAM_SH_SIZE = (__shareable_bss_end - __shareable_bss_start)
                0x204bc000                        __BSS_SRAM_SH_END = __shareable_bss_end
                0x20000000                        __RAM_INTERRUPT_START = __interrupts_ram_start
                0x00000800                        __INIT_INTERRUPT_START = __interrupts_init_start
                0x00000800                        __INIT_INTERRUPT_END = __interrupts_init_end
                0x00000000                        __RAM_ITCM_START = __itcm_start__
                0x00000c84                        __ROM_ITCM_START = __tcm_code_rom_start
                0x00000c84                        __ROM_ITCM_END = __tcm_code_rom_end
                0x20000000                        __RAM_DTCM_DATA_START = __dtcm_data_start__
                0x00000c84                        __ROM_DTCM_DATA_START = __tcm_data_rom
                0x00000c84                        __ROM_DTCM_END = __tcm_data_rom_end
                0x00000c14                        __INIT_TABLE = __init_table
                0x00000c60                        __ZERO_TABLE = __zero_table
                0x00000001                        __RAM_INIT = 0x1
                0x00000001                        __ITCM_INIT = 0x1
                0x00000001                        __DTCM_INIT = 0x1
                0x00000bf8                        Fls_ACEraseRomStart = __acfls_code_rom_start
                0x00000bf8                        Fls_ACEraseRomEnd = __acfls_code_rom_end
                0x00000000                        Fls_ACEraseSize = ((__acfls_code_rom_end - __acfls_code_rom_start) / 0x4)
                0x00000bf8                        Fls_ACWriteRomStart = __acfls_code_rom_start
                0x00000bf8                        Fls_ACWriteRomEnd = __acfls_code_rom_end
                0x00000000                        Fls_ACWriteSize = ((__acfls_code_rom_end - __acfls_code_rom_start) / 0x4)
                0x2047ff00                        _ERASE_FUNC_ADDRESS_ = ADDR (.acfls_code_ram)
                0x2047ff00                        _WRITE_FUNC_ADDRESS_ = ADDR (.acfls_code_ram)
                0x00000800                        __ENTRY_VTABLE = __INIT_INTERRUPT_START
                0x00000800                        __CORE0_VTOR = __INIT_INTERRUPT_START
                0x00000800                        __CORE1_VTOR = __INIT_INTERRUPT_START
                0x00000800                        __CORE2_VTOR = __INIT_INTERRUPT_START
                0x00000003                        __INDEX_COPY_CORE2 = 0x3
                0x00000001                        ASSERT ((__standby_ram_end__ <= __STANDBY_RAM_LIMIT_END), Memory for standby ram overflow)
OUTPUT(firmware.elf elf32-littlearm)
LOAD linker stubs

.comment        0x00000000       0x26
 .comment       0x00000000       0x26 main.o
                                 0x27 (size before relaxing)
 .comment       0x00000026       0x27 startup.o
 .comment       0x00000026       0x27 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-memset.o)

.ARM.attributes
                0x00000000       0x32
 .ARM.attributes
                0x00000000       0x34 main.o
 .ARM.attributes
                0x00000034       0x34 startup.o
 .ARM.attributes
                0x00000068       0x1f startup_cm7.o
 .ARM.attributes
                0x00000087       0x34 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-memset.o)

.debug_info     0x00000000      0x135
 .debug_info    0x00000000      0x135 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-memset.o)

.debug_abbrev   0x00000000       0xb7
 .debug_abbrev  0x00000000       0xb7 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-memset.o)

.debug_loclists
                0x00000000      0x1c2
 .debug_loclists
                0x00000000      0x1c2 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-memset.o)

.debug_aranges  0x00000000       0x20
 .debug_aranges
                0x00000000       0x20 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-memset.o)

.debug_line     0x00000000      0x1b6
 .debug_line    0x00000000      0x1b6 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-memset.o)

.debug_str      0x00000000      0x174
 .debug_str     0x00000000      0x174 /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-memset.o)
                                0x1ad (size before relaxing)

.debug_frame    0x00000000       0x2c
 .debug_frame   0x00000000       0x2c /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(libc_a-memset.o)
